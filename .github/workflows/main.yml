name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        echo $PWD
        ls
        python -m pip install --upgrade pip
        cd bb_back
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    - name: yapf
      run: |
        cd bb_back
        yapf . --recursive --diff
    - name: flake8
      run: |
        cd bb_back
        flake8 . --append-config setup.cfg
    - name: mypy
      run: |
        cd bb_back
        mypy . --config-file setup.cfg

  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3 
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1 
      
    - name: Login to Docker 
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Push to Docker Hub
      uses: docker/build-push-action@v2 
      with:
        push: true
        context: ./bb_back/
        file: ./bb_back/Dockerfile
        tags: ${{ secrets.DOCKER_USERNAME }}/bb:latest 

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/developer/deploy/
            docker-compose stop
            touch .env
            echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> .env
            # echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            # echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            # echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            # echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            # echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            # echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            docker-compose pull
            docker-compose up -d
            # docker exec $(docker ps -aqf "name=deploy_web_1") "python manage.py makemigrations"
            # docker exec $(docker ps -aqf "name=deploy_web_1") "python manage.py migrate"
